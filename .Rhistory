rstudioapi::addTheme("https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme", apply = TRUE)
nycflights13::flights[,1:7] %>% print(n = 3)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
install.packages("nycflights13")
nycflights13::flights[,1:7] %>% print(n = 3)
nycflights13::flights[,1:7] %>% print(n = 3)
head(airmiles)
library(nycflights13)
nycflights13::flights
head(nycflights13::flights)
head(nycflights13::flights)
head(nycflights::flights)
install.packages("nycflights13")
install.packages("nycflights13")
library(nycflights13)
nycflights13::flights
head(nycflights::flights)
x <- c(3,2,1,0,4,0)
aa
clear
x <- 1
x <- c(3,2,1,0,4,0)
plot(cars)
---
title: "R Notebook"
output: html_notebook
---
mrcars
header(mtcars)
summary(mtcars)
df <- mtcars
df[, 'cyl']
mydata %>% filter(cyl >= 6)
df <- filter(cyl >= 6)
df <- filter(mtcars[,'cyl'] >= 6)
df <- filter(df.cyl >= 6)
six_cyl <- subset(mtcars[,cyl] >= 6)
six_cyl <- subset(mtcars[,"cyl"] >= 6)
six_cyl <- subset(mtcars, mtcars[,"cyl"] >= 6)
str(six_cyl)
header(mtcars)
str(df)
row.names(df)
row.names(six_cyl)
install.packages(c("ggplot2", "tibble", "tidyr", "readr", "purrr", "dplyr", "stringr"))
install.packages("forcats")
library(nycflights13)
data <- nycflights13::flights
view(data)
library(ggplot2)
library(tibble)
library(tidyr)
view(data)
library(rlang)
install.packages("tidyverse")
library(tidyverse)
players_22 <- read.csv("~/FIIT_WS_2021/DPS/archive/players_22.csv", encoding="UTF-8")
View(players_22)
View(players_22)
View(players_22)
library(tibble)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res_1 <- players_22 %>%
select(weight_kg, defending, height_cm, body_type)
library(dplyr)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res_1 <- players_22 %>%
select(weight_kg, defending, height_cm, body_type)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res_1 <- players_22 %>%
select(weight_kg, defending, height_cm, body_type)
str(res_1)
%>%
order_by(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res_1 <- players_22 %>%
select(weight_kg, defending, height_cm, body_type)
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res_1 <- players_22 %>%
select(weight_kg, defending, height_cm, body_type)
str(res_1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res_1 <- players_22 %>%
select(weight_kg, defending, height_cm, body_type)
str(res_1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type) %>%
filter(between(height_cm, 170, 185) & grepl('Lean (170-185)', body_type)) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type) %>%
filter(between(height_cm, 170, 185) & grepl('Lean (170-185)', body_type)) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type) %>%
filter(grepl('Lean (170-185)', body_type)) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(weight_kg, defending, height_cm, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(defending, height_cm) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
clear
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
min(res1$defending)
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
drop_na() %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
drop_na() %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
library(tidyverse)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
drop_na() %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
str(res1)
min(res1$defending)
min(res1$defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(defending))
min(res1$defending)
min(res1$defending)
min(res1$defending)
min(res1$defending)
res2 <- select(defending, body_type) %>%
filter(body_type %in% c('Unique')) %>%
arrange(desc(defending))
min(res1$defending, na.rm=TRUE)
str(res1)
res2 <- select(defending, body_type) %>%
filter(body_type %in% c('Unique')) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(defending)
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(defending)
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(height_cm)
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)')) %>%
arrange(desc(height_cm))
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)') & between(height_cm, 170, 185)) %>%
arrange(desc(height_cm))
str(res1)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)') & between(height_cm, 170, 185)) %>%
arrange(height_cm)
str(res1)
min(res1$defending, na.rm=TRUE)
min(res1$defending, na.rm=TRUE) - min(res2$defending, na.rm=TRUE)
res2 <- select(defending, body_type) %>%
filter(body_type %in% c('Unique')) %>%
arrange(defending)
min(res1$defending, na.rm=TRUE) - min(res2$defending, na.rm=TRUE)
min(res1$defending, na.rm=TRUE) - min(res2$defending, na.rm=TRUE)
res2 <- select(defending, body_type) %>%
filter(body_type %in% c('Unique') & between(height_cm, 170, 185)) %>%
arrange(defending)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)') & between(height_cm, 170, 185)) %>%
arrange(height_cm)
res2 <- players_22 %>%
select(defending, body_type) %>%
filter(body_type %in% c('Unique') & between(height_cm, 170, 185)) %>%
arrange(defending)
res2 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Unique') & between(height_cm, 170, 185)) %>%
arrange(defending)
min(res1$defending, na.rm=TRUE) - min(res2$defending, na.rm=TRUE)
abs(min(res1$defending, na.rm=TRUE) - min(res2$defending, na.rm=TRUE))
# meno hraca fifa 22 team BARCELONA biggest diff between trhovou hodnotou a mesacnym platom
players_22$price_diff <- abs((players_22$value_eur - players_22$wage_eur))
str(players_22$price_diff)
summarise(max = max(price_diff))
summarise(max = max(value))
max(res_fcb)
max(res_fcb$price_diff)
filter(club_name %in% c('FC Barcelona')
max(res_fcb$price_diff)
str(res_fcb)
filter(club_name %in% c('FC Barcelona')
filter(club_name %in% c('FC Barcelona')
filter(club_name %in% c('FC Barcelona')
# meno hraca fifa 22 team BARCELONA biggest diff between trhovou hodnotou a mesacnym platom
players_22$price_diff <- abs((players_22$value_eur - players_22$wage_eur))
filter(club_name %in% c('FC Barcelona')
filter(club_name %in% c('FC Barcelona')
filter(club_name %in% c('FC Barcelona')
filter(club_name %in% c('FC Barcelona')
filter(club_name %in% c('FC Barcelona')
res_fcb <- players_22 %>%
select(long_name, price_diff, club_name) %>%
filter(club_name %in% c('FC Barcelona'))
res_fcb <- players_22 %>%
select(long_name, price_diff, club_name) %>%
filter(club_name %in% c('FC Barcelona'))
str(res_fcb)
max(res_fcb$price_diff)
res_fcb <- players_22 %>%
select(long_name, price_diff, club_name) %>%
filter(club_name %in% c('FC Barcelona')) %>%
arrange(price_diff)
str(res_fcb)
arrange(desc(price_diff)
str(res_fcb)
res_fcb <- players_22 %>%
select(long_name, price_diff, club_name) %>%
filter(club_name %in% c('FC Barcelona')) %>%
arrange(desc(price_diff))
str(res_fcb)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / sqrt(players_22$height_cm / 100))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arange(desc(bmi))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
str(ita_res)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / sqrt((players_22$height_cm / 100))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / sqrt((players_22$height_cm / 100))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
str(ita_res)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / (players_22$height_cm / 100)^2
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / (players_22$height_cm / 100)^2)
(desc(bmi))
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / (players_22$height_cm / 100)^2)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / (players_22$height_cm)^2)
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
str(ita_res)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / (players_22$height_cm/100)^2)
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
str(ita_res)
head(ita_res)
# normlize height
players_22$norm_height <- (abs(mean(players_22$height_cm) - players_22$height_cm))
morn_res <- players_22 %>%
select(long_name, league_name, norm_height)
morn_res <- players_22 %>%
select(long_name, league_name, norm_height) %>%
filter(league_name %in% c('French Ligue 1')) %>%
arrange(desc(norm_height))
head(morn_res)
# normlize height
players_22$norm_height <- (mean(players_22$height_cm) - players_22$height_cm)
head(morn_res)
morn_res <- players_22 %>%
select(long_name, league_name, norm_height) %>%
filter(league_name %in% c('French Ligue 1')) %>%
arrange(desc(norm_height))
head(morn_res)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / (players_22$height_cm)^2)
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
head(ita_res)
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / ((players_22$height_cm / 100) * (players_22$height_cm / 100)))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
head(ita_res)
res_fcb <- players_22 %>%
select(long_name, price_diff, club_name) %>%
filter(club_name %in% c('FC Barcelona')) %>%
arrange(desc(price_diff))
str(res_fcb)
head(res_fcb)
# Min def rating of ("defending " ) hight between 170-185 lean vs unique
res1 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Lean (170-185)') & between(height_cm, 170, 185)) %>%
arrange(height_cm)
res2 <- players_22 %>%
select(defending, body_type, height_cm) %>%
filter(body_type %in% c('Unique') & between(height_cm, 170, 185)) %>%
arrange(defending)
abs(min(res1$defending, na.rm=TRUE) - min(res2$defending, na.rm=TRUE))
# hrac zo serie A s najvacsim BMI a pozicia
players_22$bmi <- (players_22$weight_kg / ((players_22$height_cm / 100) * (players_22$height_cm / 100)))
ita_res <- players_22 %>%
select(long_name, player_positions, league_name, bmi) %>%
filter(league_name %in% c('Italian Serie A')) %>%
arrange(desc(bmi))
head(ita_res)
morn_res <- players_22 %>%
select(long_name, league_name, norm_height) %>%
filter(league_name %in% c('French Ligue 1')) %>%
arrange(desc(norm_height))
head(morn_res)
View(res2)
means <- data %>% select(-year) %>% group_by(Country name) %>% summarise_all(funs(mean),na.rm=TRUE)
# Libraries
library(tidyverse)
# Libraries
library(tidyverse)
library(dplyr)
# Read dataset
df <- read_csv(file = "data/world-happiness-report.csv", col_names = T)
head(df)
means <- data %>% select(-year) %>% group_by(Country name) %>% summarise_all(funs(mean),na.rm=TRUE)
means <- data %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support`, year ) %>% group_by(Country name) %>% summarise_all(funs(mean),na.rm=TRUE)
means <- df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support`, year ) %>% group_by(Country name) %>% summarise_all(funs(mean),na.rm=TRUE)
means <- df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support`, year ) %>% group_by(`Country name`) %>% summarise_all(funs(mean),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support`, year ) %>% group_by(`Country name`) %>% summarise_all(funs(mean),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(mean),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(min, max),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median, mean,na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median, mean),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(mean),na.rm=TRUE)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median),na.rm=TRUE)
describe(df)
library(rmarkdown)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
describe(df)
cor(df)
cor(mydata, method = c("spearman"))
cor(df, method = c("spearman"))
cor(select_if(df, is.numeric), method = c("spearman"))
cor(select_if(df, is.numeric), method = c("spearman"))
%>% arrange(`Life Ladder`)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median),na.rm=TRUE) %>%
arrange(`Life Ladder`)
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median),na.rm=TRUE) %>%
arrange(desc(`Life Ladder`))
df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`) %>% summarise_all(funs(median),na.rm=TRUE) %>%
arrange(`Life Ladder`)
cor(select_if(data, is.numeric), method = c("spearman"))
data <- df %>% select(`Country name`, `Life Ladder`, `Log GDP per capita`, `Social support` ) %>% group_by(`Country name`)
cor(select_if(data, is.numeric), method = c("spearman"))
cor(select_if(data, is.numeric), method = c("spearman"))
setwd("~/FIIT_WS_2021/DPS/world-happiness-dataset-analysis")
# Read dataset
df <- read_csv(file = "data/world-happiness-report.csv", col_names = T)
